通过一个详细的列子来说明神经网络是怎样计算复杂非线性函数的输入的

弄懂为什么神经网络能用来学习复杂的非线性假设模型

y = x1 XOR x2
  = x1 XNOR x2
  我们要拟合一个符合XNOR的神经网络
  
我们从一个比较简单的
能够拟合AND运算的网络入手

特征是二进制的x1,x2
目标函数是y = x1 AND x2
AND是逻辑与
怎样才能得到只含有单个神经元的网络
来计算我们的目标函数含有and的呢？

为此我们要加上一个偏置单元　＋１
　x0 = 1
现在我们对神经网络中的权值arfa或者说是参数进行赋值
x0 = -30
x1 = 20
x2 = 20
以为着我们的假设函数
h(x) = g(-30x0-30x0+20x1+20x2)
-30 = thea_10^(1)
20 = thea_11^(1)
20 = thea_12^(1)
把这些值都想象是网络边界中连接这些参数的权值

我们来看看这一个神经元是如何进行它的工作的

Ｓ型激活函数g(z)是这个样子的
图形化

试试x1和x2对应的４种输入组合
x1 x2　　h(x)
0   0     0
0   1     0
1   0     0
1   1     1

h(x) ~= x1 AND x2
通过上面的计算过程　我们就能够知道神经网络所表示的逻辑函数的计算过程了

另一个：
可以实现或运算的函数功能：
h(x) = g(-10+20x1+20x2)
也可以得到一张表：
省略

明白：
神经网络中的单个神经元是如何被用来计算逻辑函数的

将一个更复杂的！！！！！

多层神经元
逻辑非运算！！！！！
NOT x1
这个神经网络中只有一个输入特征x1
h(x) = g(10-20x1)

NOT x1 AND NOT x2
 
计算越来越复杂


















